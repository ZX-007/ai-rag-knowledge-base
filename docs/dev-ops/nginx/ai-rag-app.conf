# AI RAG 前端 Nginx 部署配置
# 使用说明：
# 1) 将前端构建产物 `dist/` 部署到 Nginx 的站点根目录（示例：/usr/share/nginx/html）
# 2) 如与后端在同一 Docker 网络，`proxy_pass` 可指向 `http://ai-rag-app:8080`
#    若后端在其他主机或端口，请替换为实际地址（例如：http://localhost:8080 或 http://backend.domain:8080）

server {
    listen 80;
    # 作为“默认虚拟主机”
    server_name _;

    # 前端静态资源根目录
    root /usr/share/nginx/html;
    index index.html;

    # 启用 Gzip 压缩，提升传输效率
    gzip on;
    gzip_min_length 1024;
    gzip_comp_level 6;
    gzip_types text/plain text/css application/json application/javascript text/xml application/xml application/xml+rss text/javascript image/svg+xml;

    # 单页应用路由：优先命中文件，否则回退到 index.html
    location / {
        try_files $uri $uri/ /index.html;
    }

    # 静态资源缓存策略
    location ~* \.(js|css|png|jpg|jpeg|gif|svg|ico|woff2?)$ {
        expires 7d;
        add_header Cache-Control "public, max-age=604800, immutable";
        try_files $uri =404;
    }

    # 反向代理后端 API
    location /api/ {
        # 根据部署环境调整目标地址
        proxy_pass http://localhost:8080;

        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;

        # SSE（Server-Sent Events）流式响应优化
        proxy_http_version 1.1;
        proxy_buffering off;          # 禁用缓冲，确保流式输出
        proxy_read_timeout 600s;      # 保持长连接
        proxy_send_timeout 600s;

        # 如前后端不同源，启用 CORS（按需开启）
        # add_header Access-Control-Allow-Origin "*" always;
        # add_header Access-Control-Allow-Methods "GET, POST, OPTIONS" always;
        # add_header Access-Control-Allow-Headers "Content-Type, Authorization" always;
        # if ($request_method = OPTIONS) { return 204; }
    }
}