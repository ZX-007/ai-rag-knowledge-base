<?xml version="1.0" encoding="UTF-8"?>
<!--
    企业级日志配置（Logback Spring版本）
    
    功能特性：
    1. 支持异步日志记录，提升性能
    2. 按日志级别分文件存储（INFO、WARN、ERROR）
    3. 自动日志归档和压缩
    4. MDC上下文信息记录（追踪ID、用户信息等）
    5. 支持多环境配置（开发、生产）
    6. 结构化日志输出
    
    日志级别：TRACE < DEBUG < INFO < WARN < ERROR
-->
<configuration scan="true" scanPeriod="60 seconds">

    <contextName>ai-knowledge-app</contextName>
    
    <!-- 应用名称 -->
    <property name="APP_NAME" value="ai-knowledge-app"/>
    
    <!-- 日志路径配置 -->
    <springProperty scope="context" name="LOG_PATH" source="logging.path" defaultValue="./data/log"/>
    
    <!-- 日志格式配置 -->
    <conversionRule conversionWord="clr" converterClass="org.springframework.boot.logging.logback.ColorConverter"/>
    <conversionRule conversionWord="wex" converterClass="org.springframework.boot.logging.logback.WhitespaceThrowableProxyConverter"/>
    <conversionRule conversionWord="wEx" converterClass="org.springframework.boot.logging.logback.ExtendedWhitespaceThrowableProxyConverter"/>

    <!-- 
        控制台日志输出配置（带颜色）
        企业级格式：时间戳 [线程] 级别 类名 [MDC上下文] | 日志消息
        
        颜色说明（Spring Boot自动根据日志级别设置）：
        - ERROR: 红色（bold red）
        - WARN:  黄色（yellow）
        - INFO:  绿色（green）
        - DEBUG: 青色（magenta）
        - TRACE: 默认色
    -->
    <appender name="CONSOLE" class="ch.qos.logback.core.ConsoleAppender">
        <filter class="ch.qos.logback.classic.filter.ThresholdFilter">
            <level>DEBUG</level>
        </filter>
        <encoder>
            <pattern>%clr(%d{yyyy-MM-dd HH:mm:ss.SSS}){faint} %clr([%15.15t]){faint} %clr(%-5level) %clr(%-40.40logger{39}){cyan} %clr([){faint}trace=%X{traceId:-N/A} user=%X{userId:-N/A} ip=%X{clientIp:-N/A}%clr(]){faint} %clr(|){faint} %m%n%wEx</pattern>
            <charset>UTF-8</charset>
        </encoder>
    </appender>

    <!--
        INFO级别日志文件输出配置
        记录所有INFO及以上级别的日志（INFO、WARN、ERROR）
    -->
    <appender name="INFO_FILE" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <file>${LOG_PATH}/info.log</file>
        <encoder>
            <pattern>%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level %logger{50} [trace=%X{traceId:-N/A}|user=%X{userId:-N/A}|ip=%X{clientIp:-N/A}|module=%X{module:-N/A}|op=%X{operation:-N/A}] - %msg%n</pattern>
            <charset>UTF-8</charset>
        </encoder>
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <fileNamePattern>${LOG_PATH}/archive/info-%d{yyyy-MM-dd}.%i.log.gz</fileNamePattern>
            <timeBasedFileNamingAndTriggeringPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP">
                <maxFileSize>200MB</maxFileSize>
            </timeBasedFileNamingAndTriggeringPolicy>
            <maxHistory>30</maxHistory>
            <totalSizeCap>20GB</totalSizeCap>
            <cleanHistoryOnStart>false</cleanHistoryOnStart>
        </rollingPolicy>
    </appender>

    <!--
        WARN级别日志文件输出配置
        仅记录WARN级别的日志（不包括ERROR）
    -->
    <appender name="WARN_FILE" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <file>${LOG_PATH}/warn.log</file>
        <encoder>
            <pattern>%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level %logger{50} [trace=%X{traceId:-N/A}|user=%X{userId:-N/A}|ip=%X{clientIp:-N/A}] - %msg%n%wEx</pattern>
            <charset>UTF-8</charset>
        </encoder>
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <fileNamePattern>${LOG_PATH}/archive/warn-%d{yyyy-MM-dd}.%i.log.gz</fileNamePattern>
            <timeBasedFileNamingAndTriggeringPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP">
                <maxFileSize>100MB</maxFileSize>
            </timeBasedFileNamingAndTriggeringPolicy>
            <maxHistory>30</maxHistory>
            <totalSizeCap>10GB</totalSizeCap>
        </rollingPolicy>
        <!-- 只记录WARN级别 -->
        <filter class="ch.qos.logback.classic.filter.LevelFilter">
            <level>WARN</level>
            <onMatch>ACCEPT</onMatch>
            <onMismatch>DENY</onMismatch>
        </filter>
    </appender>

    <!--
        ERROR级别日志文件输出配置
        仅记录ERROR级别的日志（包含完整堆栈）
    -->
    <appender name="ERROR_FILE" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <file>${LOG_PATH}/error.log</file>
        <encoder>
            <pattern>%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level %logger{50} [trace=%X{traceId:-N/A}|user=%X{userId:-N/A}|ip=%X{clientIp:-N/A}] - %msg%n%wEx</pattern>
            <charset>UTF-8</charset>
        </encoder>
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <fileNamePattern>${LOG_PATH}/archive/error-%d{yyyy-MM-dd}.%i.log.gz</fileNamePattern>
            <timeBasedFileNamingAndTriggeringPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP">
                <maxFileSize>100MB</maxFileSize>
            </timeBasedFileNamingAndTriggeringPolicy>
            <maxHistory>90</maxHistory>
            <totalSizeCap>20GB</totalSizeCap>
        </rollingPolicy>
        <!-- 只记录ERROR级别 -->
        <filter class="ch.qos.logback.classic.filter.LevelFilter">
            <level>ERROR</level>
            <onMatch>ACCEPT</onMatch>
            <onMismatch>DENY</onMismatch>
        </filter>
    </appender>

    <!--
        异步日志配置
        使用异步appender提升性能，避免日志记录阻塞业务线程
        
        配置说明：
        - discardingThreshold: 队列剩余容量阈值，0表示不丢弃日志
        - queueSize: 异步队列大小
        - neverBlock: true时不阻塞业务线程，但可能丢失日志
        - includeCallerData: 是否包含调用者信息（影响性能）
    -->
    <appender name="ASYNC_INFO" class="ch.qos.logback.classic.AsyncAppender">
        <discardingThreshold>0</discardingThreshold>
        <queueSize>10240</queueSize>
        <neverBlock>false</neverBlock>
        <includeCallerData>false</includeCallerData>
        <appender-ref ref="INFO_FILE"/>
    </appender>

    <appender name="ASYNC_WARN" class="ch.qos.logback.classic.AsyncAppender">
        <discardingThreshold>0</discardingThreshold>
        <queueSize>2048</queueSize>
        <neverBlock>false</neverBlock>
        <includeCallerData>false</includeCallerData>
        <appender-ref ref="WARN_FILE"/>
    </appender>

    <appender name="ASYNC_ERROR" class="ch.qos.logback.classic.AsyncAppender">
        <discardingThreshold>0</discardingThreshold>
        <queueSize>2048</queueSize>
        <neverBlock>false</neverBlock>
        <includeCallerData>true</includeCallerData>
        <appender-ref ref="ERROR_FILE"/>
    </appender>

    <!--
        环境特定配置
        开发环境：输出详细的DEBUG日志到控制台
        生产环境：只记录INFO及以上级别
    -->
    
    <!-- 开发环境配置 -->
    <springProfile name="local">
        <logger name="com.lcx" level="DEBUG" additivity="false">
            <appender-ref ref="CONSOLE"/>
            <appender-ref ref="ASYNC_INFO"/>
            <appender-ref ref="ASYNC_WARN"/>
            <appender-ref ref="ASYNC_ERROR"/>
        </logger>
        
        <root level="INFO">
            <appender-ref ref="CONSOLE"/>
            <appender-ref ref="ASYNC_INFO"/>
            <appender-ref ref="ASYNC_WARN"/>
            <appender-ref ref="ASYNC_ERROR"/>
        </root>
    </springProfile>

    <!-- 生产环境配置 -->
    <springProfile name="pro">
        <logger name="com.lcx" level="INFO" additivity="false">
            <appender-ref ref="CONSOLE"/>
            <appender-ref ref="ASYNC_INFO"/>
            <appender-ref ref="ASYNC_WARN"/>
            <appender-ref ref="ASYNC_ERROR"/>
        </logger>
        
        <root level="INFO">
            <appender-ref ref="CONSOLE"/>
            <appender-ref ref="ASYNC_INFO"/>
            <appender-ref ref="ASYNC_WARN"/>
            <appender-ref ref="ASYNC_ERROR"/>
        </root>
    </springProfile>

    <!-- 默认配置（未指定环境时使用） -->
    <springProfile name="!local &amp; !pro">
        <logger name="com.lcx" level="INFO" additivity="false">
            <appender-ref ref="CONSOLE"/>
            <appender-ref ref="ASYNC_INFO"/>
            <appender-ref ref="ASYNC_WARN"/>
            <appender-ref ref="ASYNC_ERROR"/>
        </logger>
        
        <!-- 第三方框架日志级别控制 -->
        <logger name="org.springframework" level="WARN"/>
        <logger name="org.springframework.boot" level="INFO"/>
        <logger name="org.springframework.ai" level="INFO"/>
        <logger name="org.redisson" level="WARN"/>
        <logger name="org.apache" level="WARN"/>
        <logger name="org.hibernate" level="WARN"/>
        <logger name="com.zaxxer.hikari" level="WARN"/>
        
        <root level="INFO">
            <appender-ref ref="CONSOLE"/>
            <appender-ref ref="ASYNC_INFO"/>
            <appender-ref ref="ASYNC_WARN"/>
            <appender-ref ref="ASYNC_ERROR"/>
        </root>
    </springProfile>

</configuration>
