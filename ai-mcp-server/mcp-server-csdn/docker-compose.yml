services:
  # ==========================================
  # MCP Server CSDN - SSE 模式
  # ==========================================
  mcp-server-csdn-sse:
    build:
      context: .
      dockerfile: Dockerfile
    image: mcp-server-csdn:latest
    container_name: mcp-server-csdn-sse
    restart: unless-stopped
    
    # 环境变量配置
    environment:
      # Spring 配置
      SERVER_PORT: 8081
      SPRING_PROFILES_ACTIVE: sse,prod

      # CSDN API 配置（需要替换为实际值）
      CSDN_API_CATEGORIES: ${CSDN_API_CATEGORIES:-Java场景面试宝典}
      CSDN_API_COOKIE: ${CSDN_API_COOKIE}
      
      # JVM 配置
      JAVA_OPTS: >-
        -Xms256m 
        -Xmx512m 
        -XX:+UseG1GC 
        -XX:+UseContainerSupport
        -XX:MaxGCPauseMillis=200
        -Djava.security.egd=file:/dev/./urandom
      
      # 时区和编码
      TZ: Asia/Shanghai
      LANG: C.UTF-8
      LC_ALL: C.UTF-8
    
    # 端口映射
    ports:
      - "8081:8081"
    
    # 数据卷挂载
    volumes:
      # 日志持久化
      - ./data/log:/app/data/log
      # 自定义配置（可选）
      # - ./config/application-custom.yml:/app/config/application-custom.yml:ro
    
    # 健康检查
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:8081/actuator/health"]
      interval: 30s
      timeout: 3s
      start_period: 40s
      retries: 3
    
    # 资源限制
    deploy:
      resources:
        limits:
          cpus: '1.0'
          memory: 1G
        reservations:
          cpus: '0.5'
          memory: 512M
    
    # 网络配置
    networks:
      - mcp-network
    
    # 日志配置
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"


  # ==========================================
  # MCP Server CSDN - STDIO 模式（示例）
  # ==========================================
  # 注意：STDIO 模式通常不在 Docker 中运行
  # 如需使用，请通过命令行直接启动容器


# ==========================================
# 网络配置
# ==========================================
networks:
  mcp-network:
    driver: bridge
    name: mcp-network


# ==========================================
# 数据卷配置
# ==========================================
volumes:
  mcp-logs:
    driver: local

